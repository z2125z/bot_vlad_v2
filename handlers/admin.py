from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config.config import Config
from database.db import Database

router = Router()
db = Database()

def is_admin(user_id: int) -> bool:
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤ –¥–ª—è {user_id}, ADMIN_IDS: {Config.ADMIN_IDS}")
    return user_id in Config.ADMIN_IDS

@router.message(Command("admin"))
async def admin_panel(message: types.Message):
    user_id = message.from_user.id
    print(f"üéØ –ö–æ–º–∞–Ω–¥–∞ /admin –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    if not is_admin(user_id):
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return

    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")],
        [InlineKeyboardButton(text="üì® –ù–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_new_mailing")],
        [InlineKeyboardButton(text="üìã –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫", callback_data="admin_mailing_history")]
    ])
    
    await message.answer("üõ†Ô∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", reply_markup=keyboard)

@router.callback_query(F.data == "admin_stats")
async def show_stats(callback: types.CallbackQuery):
    if not is_admin(callback.from_user.id):
        await callback.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        return

    user_count = db.get_user_count()
    mailings = db.get_all_mailings()
    total_mailings = len(mailings)
    
    stats_text = f"""
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:

üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count}
üì® –í—Å–µ–≥–æ —Ä–∞—Å—Å—ã–ª–æ–∫: {total_mailings}

–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Ä–∞—Å—Å—ã–ª–æ–∫:
"""
    
    for mailing in mailings[:5]:
        stats_text += f"\nüìù {mailing[1][:50]}... (–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {mailing[4]})"
    
    await callback.message.edit_text(stats_text)

@router.callback_query(F.data == "admin_mailing_history")
async def show_mailing_history(callback: types.CallbackQuery):
    if not is_admin(callback.from_user.id):
        await callback.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        return

    mailings = db.get_all_mailings()
    
    if not mailings:
        await callback.message.edit_text("–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫ –ø—É—Å—Ç–∞.")
        return

    text = "üìã –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫:\n\n"
    for mailing in mailings[:10]:
        text += f"ID: {mailing[0]}\n"
        text += f"–¢–µ–∫—Å—Ç: {mailing[1][:100]}...\n"
        text += f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {mailing[4]} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        text += f"–î–∞—Ç–∞: {mailing[3]}\n"
        text += "‚îÄ" * 30 + "\n"
    
    await callback.message.edit_text(text)