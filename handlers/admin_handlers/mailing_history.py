from aiogram import Router, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from database.db import Database
from config.config import Config

router = Router()
db = Database()

def is_admin(user_id: int) -> bool:
    return user_id in Config.ADMIN_IDS

async def safe_edit_message(callback: types.CallbackQuery, text: str, keyboard: InlineKeyboardMarkup = None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
    except Exception as e:
        if "message is not modified" in str(e):
            await callback.answer()
        else:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "admin_mailing_history")
async def show_mailing_history(callback: types.CallbackQuery):
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        return

    mailings = db.get_all_mailings()
    
    if not mailings:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üì® –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="admin_create_mailing")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_refresh")]
        ])
        
        await safe_edit_message(
            callback,
            "üìã <b>–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫</b>\n\n"
            "–†–∞—Å—Å—ã–ª–æ–∫ –ø–æ–∫–∞ –Ω–µ –±—ã–ª–æ.\n"
            "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É!",
            keyboard
        )
        return

    text = "üìã <b>–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫</b>\n\n"
    
    for mailing in mailings[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ä–∞—Å—Å—ã–ª–æ–∫
        delivery_rate = round((mailing['delivered_count'] / mailing['sent_count']) * 100, 2) if mailing['sent_count'] > 0 else 0
        
        text += f"üì® <b>ID {mailing['id']}</b>\n"
        text += f"‚Ä¢ <b>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</b> {mailing['title'] or '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞'}\n"
        text += f"‚Ä¢ <b>–¢–∏–ø:</b> {mailing['message_type']}\n"
        text += f"‚Ä¢ <b>–ê—É–¥–∏—Ç–æ—Ä–∏—è:</b> {mailing['audience_type']}\n"
        text += f"‚Ä¢ <b>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:</b> {mailing['sent_count']} —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        text += f"‚Ä¢ <b>–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ:</b> {mailing['delivered_count']} —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        text += f"‚Ä¢ <b>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b> {delivery_rate}%\n"
        text += f"‚Ä¢ <b>–î–∞—Ç–∞:</b> {mailing['created_at'][:16]}\n"
        text += "‚îÄ" * 30 + "\n"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä Excel –æ—Ç—á–µ—Ç –ø–æ —Ä–∞—Å—Å—ã–ª–∫–∞–º", callback_data="admin_excel_report")],
        [InlineKeyboardButton(text="üì® –ù–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_create_mailing")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_refresh")]
    ])
    
    await safe_edit_message(callback, text, keyboard)
    await callback.answer()

@router.callback_query(F.data == "admin_mailing_stats")
async def show_mailing_detailed_stats(callback: types.CallbackQuery):
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        return

    mailing_performance = db.get_mailing_performance()
    
    if not mailing_performance:
        await safe_edit_message(
            callback,
            "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫</b>\n\n"
            "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ä–∞—Å—Å—ã–ª–∫–∞—Ö.",
            InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_mailing_history")]
            ])
        )
        return

    text = "üìä <b>–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫</b>\n\n"
    
    total_sent = 0
    total_delivered = 0
    
    for perf in mailing_performance[:10]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ä–∞—Å—Å—ã–ª–æ–∫
        text += f"üì® <b>{perf['title']}</b>\n"
        text += f"‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {perf['sent_count']}\n"
        text += f"‚Ä¢ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {perf['delivered_count']}\n"
        text += f"‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {perf['delivery_rate']}%\n"
        text += f"‚Ä¢ –î–∞—Ç–∞: {perf['created_at'][:16]}\n"
        text += "‚îÄ" * 30 + "\n"
        
        total_sent += perf['sent_count']
        total_delivered += perf['delivered_count']
    
    overall_rate = round((total_delivered / total_sent) * 100, 2) if total_sent > 0 else 0
    
    text += f"\n<b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
    text += f"‚Ä¢ –í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {total_sent}\n"
    text += f"‚Ä¢ –í—Å–µ–≥–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {total_delivered}\n"
    text += f"‚Ä¢ –û–±—â–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {overall_rate}%"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä Excel –æ—Ç—á–µ—Ç", callback_data="admin_excel_report")],
        [InlineKeyboardButton(text="üîô –ö –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞—Å—Å—ã–ª–æ–∫", callback_data="admin_mailing_history")]
    ])
    
    await safe_edit_message(callback, text, keyboard)
    await callback.answer()